const mongoose = require('mongoose');
const mongooseLeanVirtuals = require('mongoose-lean-virtuals');

const { Schema } = mongoose;

const categories = {
  type: { category: String, rating: Number },
  enum: ['ACCURACY_OF_POST', 'QUALITY_OF_WORK', 'PUNCTULAITY', 'MANNERS', 'COMMUNICATION'],
};
const ReviewSchema = new Schema(
  {
    jobId: {
      type: Schema.Types.ObjectId,
      ref: 'JobModel',
      required: [true, 'Review must be associated with a job'],
    },
    bidderId: {
      type: Schema.Types.ObjectId,
      ref: 'UserModel',
      required: [true, 'Review must be associated with a tasker'],
    },
    proposerId: {
      type: Schema.Types.ObjectId,
      ref: 'UserModel',
      required: [true, 'Review must be associated with a Requester'],
    },
    proposerReview: {
      type: {
        ratingCategories: [{ type: categories }],
        personalComment: String, //max 100 chars
      },
    },
    bidderReview: {
      type: {
        ratingCategories: [{ type: categories }],
        personalComment: String, //max 120 chars
      },
    },
    extras: { type: Object },
  },
  { timestamps: true } // createdAt and updatedAt auto generated by mongoose
);

ReviewSchema.virtual('requiresProposerReview').get(function() {
  return !this.proposerReview;
});
ReviewSchema.virtual('requiresBidderReview').get(function() {
  return !this.bidderReview;
});

ReviewSchema.virtual('revealToBoth').get(function() {
  return !this.requiresProposerReview && !this.requiresBidderReview;
});

ReviewSchema.plugin(mongooseLeanVirtuals);

//no need for index on these . avoid performance slowness
mongoose.model('ReviewModel', ReviewSchema);
