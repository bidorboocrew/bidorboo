const mongoose = require('mongoose');
const mongooseLeanVirtuals = require('mongoose-lean-virtuals');

const { Schema } = mongoose;

const categories = {
  type: { category: String, rating: Number },
  enum: ['ACCURACY_OF_POST', 'QUALITY_OF_WORK', 'PUNCTUALITY', 'MANNERS', 'COMMUNICATION'],
};
const ReviewSchema = new Schema(
  {
    requestId: {
      type: Schema.Types.ObjectId,
      ref: 'RequestModel',
      required: [true, 'Review must be associated with a Request'],
    },
    taskerId: {
      type: Schema.Types.ObjectId,
      ref: 'UserModel',
      required: [true, 'Review must be associated with a Tasker'],
    },
    requesterId: {
      type: Schema.Types.ObjectId,
      ref: 'UserModel',
      required: [true, 'Review must be associated with a Requester'],
    },
    requesterReview: {
      type: {
        ratingCategories: [{ type: categories }],
        personalComment: String, //max 100 chars
      },
    },
    taskerReview: {
      type: {
        ratingCategories: [{ type: categories }],
        personalComment: String, //max 120 chars
      },
    },
  },
  { timestamps: true } // createdAt and updatedAt auto generated by mongoose
);

ReviewSchema.virtual('requiresRequesterReview').get(function() {
  return !this.requesterReview;
});
ReviewSchema.virtual('requiresTaskerReview').get(function() {
  return !this.taskerReview;
});

ReviewSchema.virtual('revealToBoth').get(function() {
  return !this.requesterReview && !this.taskerReview;
});

ReviewSchema.plugin(mongooseLeanVirtuals);

//no need for index on these . avoid performance slowness
mongoose.model('ReviewModel', ReviewSchema);
